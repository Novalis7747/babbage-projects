--[[
	Dolphin Script: IBM Notes 9.
	Version: 20171102. Final.
	Author: Peter Dackers (Babbage Automation).
	Title: Babbage Virtuele Focus Zoeker.
--]]

-- Requirements:
require "strict"
require "dolphin"
require "windows_functions"

-- Global Environment:
local application_title
local entrie_selection
local list_entries
local search_window_title
local search_multiplier_separator
local selected_action
local settings_file
local string_separator
local window_title_length_start
local window_title_length_end

-- Variables Provided By Dolphin:
KEYPRESS_NORMAL=1 -- Normale toetsaanslag, indrukken en loslaten
KEYPRESS_PRESS=2 -- Toets indrukken en vasthouden
KEYPRESS_RELEASE=3 -- Toets loslaten
INPUT_KEYBOARD=1
KEYEVENTF_KEYUP=2
KEYEVENTF_UNICODE=4

--[[
	Linker SHIFT + F opent het zoekvenster.
	Locatie bepalen van het .INI bestand. Standaard: SETTINGS\SCRIPT_DATA.
--]]
function EventScriptStartup()
	System.RegisterScriptKey(KEY_F,MODIFIER_LEFT_SHIFT,"VirtualSearch","Register a new search hotkey")
	local folder=System.GetInfo(INFO_SCRIPT_DATA_PATH)
	local name=System.GetInfo(INFO_SCRIPT_NAME)
	name=wstring.gsub(name,L"\.lu.$",L".ini")
	settings_file=wstring.format(L"%s\\%s",folder,name)
	return true
end

--[[
	De volgende functie is door Dolphin aangeleverd.
	Deze functie gebruikt USER32.DLL van Windows om een toets te
	simuleren, I.P.V. de SIMULATEKEYPRESS functie van Dolphin.
--]]
function DoKeyPress(vkey,character,mode)
	local sizeof_input=28
	local dwFlags=0
	local wScan=0
	local wVk=0
	if character~=0 then
		wScan=character
		dwFlags=KEYEVENTF_UNICODE
	else
		wVk=vkey
	end
	local input_structure=System.AllocateUserData(sizeof_input)
	if mode==KEYPRESS_NORMAL or mode==KEYPRESS_PRESS then
		local s=string.pack("LHHLLL",INPUT_KEYBOARD,wVk,wScan,dwFlags,0,0)
		System.StringToUserData(input_structure,s,20)
		local dll_function={dll_name="user32.dll",function_name="SendInput",standard_call=1,parameters=3}
		local dll_params={1,input_structure,sizeof_input}
		System.CallDllFunction(dll_function,dll_params)
	end
	if mode==KEYPRESS_NORMAL or mode==KEYPRESS_RELEASE then
		dwFlags=dwFlags+KEYEVENTF_KEYUP
		local s=string.pack("LHHLLL",INPUT_KEYBOARD,wVk,wScan,dwFlags,0,0)
		System.StringToUserData(input_structure,s,20)
		local dll_function={dll_name="user32.dll",function_name="SendInput",standard_call=1,parameters=3}
		local dll_params={1,input_structure,sizeof_input}
		System.CallDllFunction(dll_function,dll_params)
	end
	input_structure=nil
	return true
end

--[[
	Zonder SYSTEM.SLEEP worden de functies niet altijd correct uitgevoerd.
	Ik ben tot deze oplossing gekomen door naar scripts van John v.d. G. te kijken.
--]]
function VirtualSearch()
	LoadSettingsFile()
	System.Sleep(200)
	StringToTable(list_entries)
	System.Sleep(200)
	ProvideListBox()
	System.Sleep(400)
	if entrie_selection~=nil then
		PerformSearch()
	end
	return true
end

--[[
	De methode TOSTRING wordt gebruikt om foutmeldingen omtrent STRINGS en WSTRINGS af te vangen.
--]]
function LoadSettingsFile()
	Config.Create(settings_file)
	local window_handle=Win.GetForegroundWindow()
	local window_title=System.GetWindowText(window_handle)
	application_title=tostring(window_title)
	local match_title_start=Config.ReadNumber(settings_file,L"WindowTitleMatch",L"WindowTitleLengthStart",1)
	local match_title_end=Config.ReadNumber(settings_file,L"WindowTitleMatch",L"WindowTitleLengthEnd",41)
	window_title_length_start=match_title_start
	window_title_length_end=match_title_end
	application_title=string.sub(application_title,window_title_length_start,window_title_length_end)
	local read_data=Config.ReadString(settings_file,application_title,L"Keywords",L"")
	local separator=Config.ReadString(settings_file,L"Separators",L"StringSeparator",L";;")
	local multiplier_separator=Config.ReadString(settings_file,L"Separators",L"MultiplierSeparator",L"--")
	list_entries=tostring(read_data)
	string_separator=tostring(separator)
	search_multiplier_separator=tostring(multiplier_separator)
	return true
end

function StringToTable(input)
	local table={}
	local index=1
	for string in string.gmatch(input,"([^"..string_separator.."]+)") do
		table[index]=string
		index=index+1
	end
	list_entries=table
	return true
end

function ProvideListBox()
	local options={title="Zoeken",text="Zoekterm:",sort=1,selected=1}
	local custom={"Zoek en &Klik","&Zoeken","Zoek en &Tab","&Annuleren"}
	local result,action=Dialog.ListBox(options,list_entries,custom)
	entrie_selection=list_entries[result]
	selected_action=action
	return true
end

--[[
	De methode TOSTRING wordt gebruikt om foutmeldingen omtrent STRINGS en WSTRINGS af te vangen.
	Dolphin functie DOKEYPRESS. Code: 9 (0x09) is de VKC voor de TAB-toets.
--]]
function PerformSearch()
	local split_result={}
	local index=1
	local gm_string=string.gmatch(entrie_selection,"([^"..search_multiplier_separator.."]+)")
	for part in gm_string do
		split_result[index]=part
		index=index+1
	end
	local search_entrie=split_result[1]
	local multiplier=split_result[2]
	--[[
		Als er wel een zoekwoord is opgegeven, maar geen multiplier, dan is 1 de standaardwaarde.
		Er wordt dus altijd 1x gezocht op een zoekwoord.
	--]]
	if multiplier==nil then
		multiplier=1
	end
	tostring(search_entrie)
	tonumber(multiplier)
	local window_handle=Win.GetForegroundWindow()
	local window_title=System.GetWindowText(window_handle)
	search_window_title=tostring(window_title)
	search_window_title=string.sub(search_window_title,window_title_length_start,window_title_length_end)
	if application_title~=search_window_title then
		Braille.Text(L"Geannuleerd")
		Speak.Text(L"Geannuleerd")
		do return end
	elseif selected_action<=3 then
		VF.ChooseFocus(FOCUS_VF)
		VF.Move(MOVE_VF_AREA_TOP,1)
		local search={direction=DIRECTION_VF_NEXT,scope=SCOPE_CURRENT_VF,scroll=1,text=search_entrie}
		for times=multiplier,1,-1 do
			local result=VF.FindText(search)
			if result==nil then
				Braille.Text(L"Zoekterm niet gevonden")
				Speak.Text(L"Zoekterm niet gevonden")
				VF.ChooseFocus(FOCUS_BACK)
				do return end
			end
		end
		if selected_action==1 then
			VF.Action(CLICK_LEFT)
			local mouse_x,mouse_y=System.GetMousePosition()
			VF.MoveToXY(mouse_x,mouse_y)
			System.Sleep(200)
			VF.ChooseFocus(FOCUS_BACK)
		elseif selected_action==2 then
			VF.Action(CLICK_MOVE_ONLY)
		elseif selected_action==3 then
			VF.Action(CLICK_LEFT)
			local mouse_x,mouse_y=System.GetMousePosition()
			VF.MoveToXY(mouse_x,mouse_y)
			System.Sleep(200)
			DoKeyPress(9,0,KEYPRESS_NORMAL)
			System.Sleep(200)
			VF.ChooseFocus(FOCUS_BACK)
		end
	else
		Braille.Text(L"Geannuleerd")
		Speak.Text(L"Geannuleerd")
	end
	Braille.Auto()
	Mag.Auto()
	Speak.Auto()
	return true
end
